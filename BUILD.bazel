load(
    "//bazel:cross_platform.bzl",
    "cc_posix_binary",
    "cc_windows_binary",
)


hdrs = glob(["include/opentracing/**/*.h"]) + [
    ":include/opentracing/config.h",
    ":include/opentracing/version.h",
]

includes = ["include"]

deps = [
  "//3rd_party:expected",
  "//3rd_party:variant",
]

## WINDOWS ##

cc_windows_binary(
  # must include .dll extension in a shared library name on Windows
  name = "opentracing.dll",
  srcs = glob(["src/**/*.cpp"], exclude = ["src/dynamic_load_unsupported.cpp", "src/dynamic_load_unix.cpp"]) + hdrs,
  # when this binary is included by other programs, it will be dynamically linked
  linkshared = 1,
  includes = includes,
  deps = deps,
  # let the preprocessor know to include special Windows dll export symbols
  defines = ["OPENTRACING_EXPORTS"],
)

# filegroup is a windows-specific quirk
filegroup(
  name = "opentracing_import_lib",
  srcs = [":opentracing.dll"],
  output_group = "interface_library",
)

cc_import(
  name = "opentracing_dll_import",
  interface_library = ":opentracing_import_lib",
  shared_library = ":opentracing.dll",
)

## POSIX ##

cc_posix_binary(
  # must include .so extension in a shared library name for posix
  name = "libopentracing.so",
  srcs = glob(["src/**/*.cpp"], exclude = ["src/dynamic_load_unsupported.cpp", "src/dynamic_load_windows.cpp"]) + hdrs,
  linkshared = 1,
  includes = includes,
  deps = deps,
)

cc_import(
  name = "opentracing_so_import",
  shared_library = ":libopentracing.so",
)

## SHARED ##

cc_library(
    name = "opentracing",
    visibility = ["//visibility:public"], # this is the only one that needs to be public
    hdrs = hdrs,
    strip_include_prefix = "include",
    deps = [
      "//3rd_party:expected",
      "//3rd_party:variant",
    ] + select({
        "@bazel_tools//src/conditions:windows": [":opentracing_dll_import"],
        "//conditions:default": [":opentracing_so_import"],
    }),
    # linkopts = [
    #   "-ldl",
    # ],
)

genrule(
    name = "generate_version_h",
    srcs = glob([
        "*",
        "cmake/*",
        "src/**/*.cpp",
    ]),
    outs = [
      "include/opentracing/config.h",
      "include/opentracing/version.h"
    ],
    cmd = """
    TEMP_DIR=$$(mktemp -d)
    CONFIG_H_OUT=$${PWD}/$(location :include/opentracing/config.h)
    VERSION_H_OUT=$${PWD}/$(location :include/opentracing/version.h)
    OPENTRACING_ROOT=$$(dirname $${PWD}/$(location :CMakeLists.txt))
    cd $$TEMP_DIR
    cmake -DBUILD_TESTING=OFF -DBUILD_MOCKTRACER=OFF -L $$OPENTRACING_ROOT
    mv include/opentracing/config.h $$CONFIG_H_OUT
    mv include/opentracing/version.h $$VERSION_H_OUT
    rm -rf $$TEMP_DIR
    """,
)
